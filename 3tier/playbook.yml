---
# Bad ansible! This playbook is an example of poor/bad practices!
# Bad practices may include:
#
#   Poor formatting and structure
#   Poor use of YAML - but good enough to parse
#   Inconsistent style
#   Incorrect use of modules
#   Poor module choice
#   Unclear names
#   Hard coding / poor use of variables
#   Roles - what are roles?
#   Bare variables
#   No use of handlers

- name: Configuration
  hosts: all
  gather_facts: false # remove later! speeds up testing
  become: true
  roles:
  - configuration
#  tasks:
#  - name: Enable yum repositories
#    template:
#      src: ./open_three-tier-app.repo
#      dest: /etc/yum.repos.d/open_three-tier-app.repo
#      mode: 0644

- name: Deploy HAProxy to frontend
  hosts: frontends
  gather_facts: false # remove later! speeds up testing
  become: true
  vars:
    proxy: haproxy
  tasks:
  - name: Install httpie
    package:
      name: httpie
      state: latest
  - name: Install HAProxy
    yum:
      name: {{ proxy }}
      state: latest
  - name: Enable HAProxy
    service:
      name: {{ proxy }}
      state: started
  - name: Configure HAProxy
    template:
      src: ./haproxy.cfg.j2
      dest: /etc/haproxy/haproxy.cfg
  - name: restart HAproxy
    service:
      name: {{ proxy }}
      state: restarted


- name: deploy tomcat
  hosts: apps
  gather_facts: false
  become: true
  roles:
    - deploy_tomcat
#  tasks:
#  - name: install tomcat
#    package:
#      name: tomcat
#      state: latest
#  - name: enable tomcat at boot
#    service:
#      name: {{ tomcat_service }}
#      enabled: yes
#  - name: create ansible tomcat directory
#    file:
#      path: /usr/share/tomcat/webapps/ROOT
#      state: directory
#  - name: copy static index.html to tomcat webapps/ansible/index.html
#    template:
#      src: index.html.j2
#      dest: /usr/share/tomcat/webapps/ROOT/index.html
#      mode: 0644
#  - name: start tomcat
#    service:
#      name: {{ tomcat_service }}
#      state: started

- name: index.html on app 1
  hosts: app1
  gather_facts: false
  become: true
  tasks:
  - name: copy static index.html to tomcat webapps/ansible/index.html
    template:
      src: index.html.app1
      dest: /usr/share/tomcat/webapps/ansible/index.html

- name: index.html on app 1
  hosts: app2
  gather_facts: false
  become: true
  tasks:
  - name: copy static index.html to tomcat webapps/ansible/index.html
    template:
      src: index.html.app2
      dest: /usr/share/tomcat/webapps/ansible/index.html

- name: deploy postgres
  hosts: apps
  gather_facts: false
  become: true
  hosts: appdbs
  tasks:
  - name: install progress
    yum:
      name: postgresql-server
      state: installed
  - name: install postgres
    yum:
      name: postgresql-server
      state: latest
  - name: enable apache at boot
    service:
      name: postgresql
      enabled: yes
  - name: tell user to finish setting up postgres
    debug:
      msg: "Either uncomment the postgres setup or manually login and initialize"

# only run the next 2 tasks once!
#  - name: initilize postgres
#    command: postgresql-setup initdb
#  - name: initilize postgres some more
#    command: chkconfig postgresql on
  - name: start postgres
    service:
      name: postgresql.service
      state: started

- name: deploy apache
  hosts: apps
  gather_facts: false
  become: true
  hosts: apps
  tasks:
  - name: install apache
    yum:
      name: httpd
      state: latest
  - name: enable apache at boot
    service:
      name: httpd
      enabled: yes
  - name: start apache
    service:
      name: httpd
      state: started
